/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* left;
    Node* right;
    Node* next;

    Node() : val(0), left(NULL), right(NULL), next(NULL) {}

    Node(int _val) : val(_val), left(NULL), right(NULL), next(NULL) {}

    Node(int _val, Node* _left, Node* _right, Node* _next)
        : val(_val), left(_left), right(_right), next(_next) {}
};
*/

class Solution {
public:
    void helper(Node* left, Node* right) {
        if(left==NULL || right==NULL){
            return;
        }
        left->next=right;
        
        helper(left->left,left->right);
        helper(right->left,right->right);
        Node* temp1=left;
        Node* temp2=right;
        while(temp1->right!=NULL){
            temp1=temp1->right;
            temp2=temp2->left;
            temp1->next=temp2;
        }
    }
    
    Node* connect(Node* root) {
        if(root==NULL){
            return root;
        }
        helper(root->left,root->right);
        return root;
    }
};
